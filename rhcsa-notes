# These are my study notes for RHCSA exam, taken while watching courses and doing labs. 

Lesson 2: Using Essential Tools

CLI Commands
	- pwd: print working directory
	- whoami: current username
	- ls: current directory
	- ls -l: -l is the "option," which shows names of directories and their properties
	- ip addr show: current IP configuration
	- free: available memory
	- free -m: m option is for megabytes
	- df - disk free and storage devices
	- df -h: h option is for human-readable formats
	- cat: Shows contents of a configuration file
	- findmnt: shows mounted file systems on machine


Understanding the Shell

Bash is the default shell
	- Tab command completion (press tab twice to show list of available options)
	- "history" command - shows list of previous use of commands
	- Use "!11" will run command eleven in the list above again. You can also use ctrl R and type in the command you want to use. You can also use the up-arrow key. 
	- Piping or semicolon - string together inputs
	- "ps aux" - ps shows processes and aux shows all processes. More powerful with root user
	*- "less" doesn't show the entire list, so ps aux | less shows screen 1. Press space to show more.
	- "wc" is word count command
	- Redirection - use ">"
	- Append - use ">>"
	- Redirect error messages - "2>"; used for results that exist and don't exist in 	one command
	- "env" - environment variables
	- Aliases - command you have defined yourself or shortcut to another command; for example: h = history makes h short for historical list of commands
	- Scripts - command file with several lines of code that can be run as an independent command
	

Understanding I/O Redirection and Piping
	- Redirection uses STDIN (standard input), STDERR (standard error) and STDOUT (standard output)
	- ">" and ">>" are for output redirection, "2>" for standard error redirection and "<" for input direction
	- In Piping, the STDOUT of the first command is used as STDIN of the second command
	- "Grep": filtering utility for searching text
	- "-R": recursive, which means including subdirectories
	- Example of redirecting: "grep -R student /etc 2>/dev/null" which redirects errors to /dev/null, which will drop everything, and will show only the ones that are useful
	- Example of piping: "ls -l /etc | grep host" will pipe in grep, the filtering tool, and look for files/directories only with the name 'host' in them


Understanding the Linux File System
	- Known as "FHS"
	- Directory usage is standardized and maintained by Linux Foundation
	- The starting point is root directory
	- Different devices may be integrated in FHS by using mounts
	- Root directory is mounted on disk device on whatever the name of your disk device is
	- Boot directory is split off and on its own device
	- Home directory can be on a remote server; server:/home
	- cd .. : means bring up one level
	- cd /boot: This is everything that is needed to boot machine, including vmlinuz, which is the Linux kernel and allows you to interact with the hardware
	- cd /dev: This is for devices and allows you to talk to specific hardware devices. 
	- etc: directory for configuration files that are readable
	- cd /home: lists user home folders
	- useradd command: allows you to create a new user, such as "useradd test"
	- cd /usr: program files and binaries in bin (commands used by normal users) and sbin (system commands used by root)
	- cd /var: writes dynamic data, such as log files in /var/log
	- man hier: manual of hierarchy


Using man
	- Sections define command types in man
	- man man: man page of manual
		- Section 1: Executable programs or shell commands: ran by ordinary users
		- Section 5: File formats and conventions: ran for config files
		- Section 8: System administration commands: ran by sysadmins as root
	- Example: man lvcreate returns "LVCREATE(8)", the 8 meaning it's from sysadmin section 8.
	- Examples of commands used are usually at the bottom of man page, which you can get to by typing uppercase "G"
	- Search for text using /
	- On a man page, the synopsis shows what options are available to use with command. If there are brackets, such as "[OPTION]", then it is optional. The 		multiple dots means it can be used multiple times.  
	
  
Finding the Right Man Page
	- All man pages are indexed in the Mandy
	- Use man -k or apropos to search mandb based on keyword
	- A lot of results can show; use grep to filter the results
	- The mandate is built automatically through a cron scheduled task
	- Manually trigger a rebuild using mandb
	- regex: regular expression
	- Update mandb by typing in "su - mandb"
	- man -k user | grep [section]
	
  
Understanding vim
	- vim (or vi) is the default editor and is used as an embedded editor by many commands
	- vim is an enhanced version of vi
	- To work with vim, you need to manage command mode and input mode
	- Command mode is default mode
	- To enter insert mode, click a, I, o or lns
	- To return to command mode, use esc
	- Use :wq! 


Using vim
	- Esc: get back to command mode
	- I, a: I is for insert and a is for append
	- o: opens or adds a new line for you
	- :wq: write-quit
	- q!: quit
	- When you type in "vim", try to follow it with the file you're working on
	- !: tells vim to not ask any followup questions
	- dd: deletes a line
	- yy: copies current line selected
	- p: paste
	- v: visual mode
	- u: undo
	- ctrl r: redo
	- y: yank as in copy
	- gg: brings cursor to first line of document
	- G: brings cursor to end line of document
	- /text: search for text
	- ?text: search for text in opposite direction; down to up.
	- ^: brings cursor to beginning of current line
	- $: brings cursor to end of current line
	- :%s/old/new/g: calling the substitute globally (g), so %s/line/LINE/g means it 	will change "line" to "LINE" globally
	
  
Understanding Blobbing and Wildcards
	- Globbing is a shell feature that helps match filenames
	- Not to be confused with regular expressions, which help find text patterns
	- For documentation: see man 7 glob
	- ls host*: shows all files that start with host
	- ls ?[insert word]*: example: ls ?ost
	- ls [hm]ost: this is all files that don't start with h or m
	- ls [!hm]ost
	- ls script[0-9][0-9]: shows all scripts followed by two-digit number
	- touch script{0..100}: example of creating 99 100 files at once

	
Using Cockpit
	- systemctl enable --now cockpit.socket: this enables cockpit
	- systemctl status --now cockpit.socket: this shows cockpit
	- Visit server GUI at localhost:9090
  

Lesson 3: Essential File Management Tools

Essential File Management Tasks
	- ls: lists files
	- mkdir: creates directory; use mkdir -p to create an entire path (e.g. mkdir -p 	new/scripts)
	- cp: copy files (cp /etc/hosts . -- that copies it to current directory; use -r 	for recursive to copy all contents within directory)
	- mv: move files (mv script* scripts/ -- this moves all files with script in it to scripts/)
	- rmdir - remove directory; limited use because you can only move empty directories
	- rm - remove command; rm -rf means recursive and f is force

Finding Files
	- "which" command looks for binaries in $PATH (current path)
	- locate uses a database but needs to be built and updated by updatedb command, which would require running a cron job at least once a day to update it
	- find command is most flexible tool: example find / -name "hosts" -- this looks for complete file names in root directory with the name "hosts"
	- Another example of find command is "find / -type" or "find / -user"; check out man page for this
	- Another example of find command is "find /etc -exec grep -l student {} \:; 2>/dev/null", which searches /etc directory and executes grep (filtering) and 	lists files that have the word student in them and redirects (2>) error messages. 	The semicolon before redirect ends the exec command, which is required
	- c is for bytes
	- find /etc -size for finding files based on size
	
Understanding Mounts
	- To access a device, it must be connected to a directory
	- This is known as mounting the device
	- The Linux filesystem typically uses multiple mounts
	- Different types of data are typically on different devices for multiple reasons such as security, manageability, specific mount options

Understanding Links
	- Links are pointers to files in a different location, which helps organize better
	- Similar to shortcuts on other operating systems
	- Links can be useful to make the same file available on multiple locations
	- Linux uses hard links and symbolic links
	- Create hard links with ln and symbolic links with ln -s
	- Symbolic links goes to a hard link whereas hard link has a direct relation to 	inode
	- Symbolic links can be created on directories and across devices, thus more flexible than hard links, but if something goes wrong with the hard link, it will fail the symbolic link too

Working with Links
	- ls -il: list files, I displays inode number, which is a unique number 
	- ln /etc/hosts /root/hardhosts: example of hard link created
	- ln -s: symbolic link command
	- Permissions are not handled at symbolic link but at target file
	- All binaries are in bin directory
	- All system binaries are in system bin directory
	- Symbolic links are more common
	- ln -s /[destination] . -- the period is the current directory

Working with tar
	- tar is the Tape Archiver
	- It doesn't compress data
	- Basic use is to compress, extract or list
		- tar -cvf my_archive.tar /home /etc: c is create, v is verbose, f is file, and that means it will create a tar file with the contents of the home and etc directories 
		- tar -tvf: shows contents of an archive
		- tar -xvf my_archive: extracts to the current directory
		- use -C to switch the output path: example tar xvf homes.tar -C /tmp
	- To add compression, use -z, -j or -J
	- All files within tar are relative filenames
	- mv command can also be used to rename
	- file command allows you to see what type of file your file is

Working with Compressed Files
	- gzip is most common compression utility
	- bzip2 is an alternative
	- zip is also available and has Windows-compatible syntax
	- x2 (xz command) is showing up more often as well because it is quicker and compresses to smaller sizes
	- gunzip will unzip the gzip file
	- gzip -k is to keep the original file in addition to the compressed file 
  
  
  Miscellaneous
	- ["command] --help" is a good command to learn more like man but less
	- "ls -d *[0-9]*" is a way to see all files with numbers in their names
	- To copy a files with specific character range, use cp /etc/[a-c]* /tmp/files.	The dash is range
	- mv [ab]* photos/: moves files beginning with a or b to /photos
	- mv c* videos/: moves files beginning with c to /photos
